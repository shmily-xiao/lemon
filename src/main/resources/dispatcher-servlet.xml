<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
   <!--过滤器！！-->
    <!--<context:component-scan base-package="com.demo"/>-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/> <!--这里如果写/*就只会过滤类似“/user，/login”这样的地址如果写的是/**就会过滤所有的地址例如“/./././.”-->
            <mvc:exclude-mapping path="/lemon/account/register"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/mp/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/img/**"/>
            <!--<mvc:exclude-mapping path="/lemon/image/**"/>-->
            <bean class="com.lemon.interceptor.validator.UserLoginValidatorInterceptor"/>
        </mvc:interceptor>
        <!--&lt;!&ndash;<mvc:interceptor>&ndash;&gt;-->
            <!--&lt;!&ndash;<mvc:mapping path="/**"/>&ndash;&gt;-->
            <!--&lt;!&ndash;<mvc:exclude-mapping path="/login"/>&ndash;&gt;-->
            <!--&lt;!&ndash;<mvc:exclude-mapping path="/register"/>&ndash;&gt;-->
            <!--&lt;!&ndash;<bean class="com.demo.filter.SessionFilter"/>&ndash;&gt;-->
        <!--&lt;!&ndash;</mvc:interceptor>&ndash;&gt;-->
    </mvc:interceptors>

    <!--<context:component-scan base-package="com.demo"/>-->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor name="cookie">-->
            <!--<param name="cookiesName">ValidationMsg</param>-->
            <!--<param name="cookiesValue">*</param>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!--通知spring使用cglib而不是jdk的来生成代理方法 ,AOP可以拦截到Controller中的方法-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
                <value>classpath:aliyunoss.properties</value>
                <value>classpath:email.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"></bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <!--<property name="basename" value="validateMessage"/>-->
        <property name="defaultEncoding" value="gbk"/>
    </bean>

    <bean id="beansValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" >
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
        <property name="validator" ref="beansValidator"/>
        <property name="conversionService" ref="conversionService"/>
    </bean>

    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>

    <!--<bean id="freeMarkerStaticAttribute" class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
    <!--<property name="location" value="classpath:freemarkerstatic.properties" />-->
    <!--</bean>-->

    <!--<bean id="freeMarkerStaticModel" class="com.simpletour.freemarker.FreeMarkerStatisModel" factory-method="getInstance">-->
    <!--<property name="staticModels" ref="freeMarkerStaticAttribute"/>-->
    <!--</bean>-->

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="false"/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <!--<property name="attributesMap" ref="freeMarkerStaticModel"/>-->
    </bean>


    <!-- ResponseBody返回中文乱码处理 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="webBindingInitializer" ref="webBindingInitializer"/>
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
                <bean class="org.springframework.http.converter.StringHttpMessageConverter" >
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json</value>
                        </list>
                    </property>
                </bean>
                <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                    <property name="features">
                        <array>
                            <value type="com.alibaba.fastjson.serializer.SerializerFeature">DisableCircularReferenceDetect</value>
                            <value type="com.alibaba.fastjson.serializer.SerializerFeature">UseISO8601DateFormat</value>
                        </array>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!-- 文件上传，配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven enable-matrix-variables="true" validator="beansValidator" />

    <context:component-scan base-package="com.lemon" use-default-filters="true" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 启动定时器 -->
    <task:annotation-driven />

    <!--<import resource="classpath:META-INF/kmodule.xml"/>-->

    <!--&lt;!&ndash; SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException &ndash;&gt;-->
    <!--&lt;!&ndash; 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 &ndash;&gt;-->
    <!--<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
    <!--<property name="exceptionMappings">-->
    <!--<props>-->
    <!--&lt;!&ndash; 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 &ndash;&gt;-->
    <!--<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->


    <!-- 静态资源-->

    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/img/**" location="/img/"/>
    <!--<mvc:resources mapping="/upload/**" location="/upload/"/>-->

</beans>